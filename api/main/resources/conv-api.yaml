openapi: 3.0.1
info:
  title: Conveyor
  version: 0.0.1
servers:
  - url: http://localhost:8080
tags:
  - name: OffersService
    description: The LoanOfferVariations calculation
  - name: CalculationService
    description: The calculation of loan variations

paths:
  /conveyor/offers:
    post:
      tags:
        - OffersService
      summary: The LoanOfferVariations calculation
      operationId: offers


      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'

      responses:

        '200':
          description: 'Ok. Successful offer response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'


        '400':
          description: 'Error 400 Bad request'


        '422':
          description: 'Error 422 UnProcessable Entity'

        '500':
          description: 'Error 500 internalServerError'


  /conveyor/calculation:
    post:
      tags:
        - CalculationService
      summary: Creating CreditDTO
      operationId: calculation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoringDataDTO'
      responses:
        '200':
          description: 'Successful calculation response'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditDTO'

        '400':
          description: 'Error 400 Bad request'


        '422':
          description: 'Error 422 UnProcessable Entity'

        '500':
          description: 'Error 500 internalServerError'






components:
  schemas:

    LoanOfferDTO:
      description: "DTO object that contains different vars of LoanOffer"
      type: object
      properties:
        applicationId:
          description: "LoanOfferDTO different Id"
          type: integer
          format: int64
        requestedAmount:
          description: "The amount of money, the client wants to loan"
          type: number
        totalAmount:
          description: "Full amount of money, that the client must return"
          type: number
        term:
          description: "The term for which the client wants to take out a loan"
          type: integer
        monthlyPayment:
          description: "The amount of money that the client must return per month"
          type: number
        rate:
          description: "Annual interest rate at which the client borrows"
          type: number
        isInsuranceEnabled:
          description: "Is the loan insured"
          type: boolean
        isSalaryClient:
          description: "Is the client a payroll client"
          type: boolean



    LoanApplicationRequestDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - email
        - birthdate
        - passportSeries
        - passportNumber
      properties:
        amount:
          description: "The amount of money, the client wants to loan"
          type: number
          minimum: 10000
        term:
          description: "The term for which the client wants to take out a loan"
          type: integer
          minimum: 6
        firstName:
          description: "Client's firstname"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        lastName:
          description: "Client's lastname"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        middleName:
          description: "Client's patronymic"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}'
        email:
          description: "Client's e-mail"
          type: string
          format: email
          pattern: '[\w\.]{2,50}@[\w\.]{2,20}'
        birthdate:
          description: "Client's birthdate"
          type: string
          format: date
          example:
            1985-01-29
        passportSeries:
          description: "Client's passport series"
          type: string
          pattern: '^\d{4}$/'
        passportNumber:
          description: "Client's passport number"
          type: string
          pattern: '^\d{6}$/'

    CreditDTO:
      type: object
      properties:
        amount:
          description: "The amount of money, the client wants to loan"
          type: number
          minimum: 10000
        term:
          description: "The term for which the client wants to take out a loan"
          type: integer
          minimum: 6
        monthlyPayment:
          description: "The amount of money that the client must return per month"
          type: number
        rate:
          description: "Annual interest rate at which the client borrows"
          type: number
        psk:
          description: "It is the total of all funds that the consumer must pay to the bank during the life of the credit transaction"
          type: number
        isInsuranceEnabled:
          description: "Is the loan insured"
          type: boolean
        isSalaryClient:
          description: "Is the client a payroll client"
          type: boolean
        paymentSchedule:
          description: "Differentiated list of monthly payments"
          type: array
          items:
            $ref: '#/components/schemas/PaymentScheduleElement'

    ScoringDataDTO:
      type: object
      required:
        - amount
        - term
        - firstName
        - lastName
        - gender
        - birthdate
        - passportSeries
        - passportNumber
        - passportIssueDate
        - passportIssueBranch
        - maritalStatus
        - dependentAmount
        - employment
        - account
        - isInsuranceEnabled
        - isSalaryClient
      properties:
        amount:
          description: "The amount of money, the client wants to loan"
          type: number
          minimum: 10000
        term:
          description: "The term for which the client wants to take out a loan"
          type: integer
          minimum: 6
        firstName:
          description: "Client's firstname"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'
        lastName:
          description: "Client's lastname"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'
        middleName:
          description: "Client's patronymic"
          type: string
          pattern: '^[a-zA-Zа-яА-Я]{2,30}$/'
        gender:
          description: "Client's gender"
          type: string
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
        birthdate:
          description: "Client's birthdate"
          type: string
          format: date
          example:
            1985-01-29
        passportSeries:
          description: "Client's passport series"
          type: string
          pattern: '^\d{4}$/'
        passportNumber:
          description: "Client's passport number"
          type: string
          pattern: '^\d{6}$/'
        passportIssueDate:
          description: "Client's passport IssueDate"
          type: string
          format: date
          example:
            1985-01-29
        passportIssueBranch:
          description: "Client's passport issue branch"
          type: string
        maritalStatus:
          description: "Client's marital status"
          type: string
          enum:
            - MARRIED
            - DIVORCED
            - SINGLE
            - WIDOW_WIDOWER
        dependentAmount:
          description: "How many dependents the client has"
          type: integer
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          description: "Client's account"
          type: string
        isInsuranceEnabled:
          description: "Is the loan insured"
          type: boolean
        isSalaryClient:
          description: "Is the client a payroll client"
          type: boolean


    EmploymentDTO:
      type: object
      properties:
        employmentStatus:
          description: "Client's employmentStatus"
          type: string
          enum:
            - UNEMPLOYED
            - SELF_EMPLOYED
            - EMPLOYED
            - BUSINESS_OWNER
        employerINN:
          description: "Client's individual tax number"
          type: string
          format: int64
          pattern: '^\d{10}$/'
        salary:
          description: "the amount of client's salary"
          type: number
        position:
          description: "The client's professional position at work"
          type: string
          enum:
            - WORKER
            - MID_MANAGER
            - TOP_MANAGER
            - OWNER
        workExperienceTotal:
          description: "Full client's official work experience"
          type: integer
        workExperienceCurrent:
          description: "Client's official work experience at the current workplace"
          type: integer




    PaymentScheduleElement:
      type: object
      properties:
        number:
          description: "Number of PaymentScheduleElement"
          type: integer
        date:
          description: "Payment date"
          type: string
          format: date
          example:
            1985-01-29
        totalPayment:
          description: "Total monthly payment"
          type: number
        interestPayment:
          description: "Interest monthly Payment"
          type: number
        debtPayment:
          description: "debt monthly Payment"
          type: number
        remainingDebt:
          type: number






